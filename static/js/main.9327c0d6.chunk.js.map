{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","setPage","pageCount","activePage","className","href","onClick","prevPage","Array","from","length","_","index","items","to","numbers","n","push","getNumbers","map","App","useState","itemsOnPage","setItemsOnPageCount","setActivePage","preparedItems","initialItems","filter","getPreparedItems","Math","ceil","firstItemOnPage","lastItemOnPage","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uKAUaA,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,QACAC,EAEI,EAFJA,UACAC,EACI,EADJA,WAEA,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAA8B,IAAfD,GAAoB,YAAhD,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAA8B,IAAfF,GAAoB,OACnCG,QAAS,kBACPL,GAAQ,SAAAM,GAAQ,OAAKA,GAAY,EAAIA,EAAWA,EAAW,MAN/D,oBAaDC,MAAMC,KAAK,CAAEC,OAAQR,IAAa,SAACS,EAAGC,GAAJ,OACjC,oBAAIR,UAAS,oBAAeD,IAAeS,EAAQ,GAAK,UAAxD,SACE,mBACEN,QAAS,kBAAML,EAAQW,EAAQ,IAC/B,UAAQ,WACRR,UAAU,YACVC,KAAI,WAAMO,EAAQ,GAJpB,SAMGA,EAAQ,SAKf,oBAAIR,UAAS,oBAAeD,IAAeD,GAAa,YAAxD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeF,IAAeD,GAAa,OAC3CI,QAAS,kBACPL,GAAQ,SAAAM,GAAQ,OACdA,GAAYL,EAAYK,EAAWA,EAAW,MAPpD,wBCvCFM,ECNC,SAAoBJ,EAAcK,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIP,EAAMO,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBC,KAAI,SAAAH,GAAC,qBAAYA,MAmBb,IAAMI,EAAgB,WAC3B,MAAmDC,mBAAS,GAAjDC,EAAX,EAAQ,GAAmBC,EAA3B,EAAwB,GACxB,EAA4CF,mBAAS,GAA1ClB,EAAX,EAAQ,GAAkBqB,EAA1B,EAAuB,GAEjBC,EAhBR,SACEC,EADF,GAGG,IADCJ,EACF,EADEA,YAAanB,EACf,EADeA,WAEf,OAAOuB,EAAaC,QAAO,SAAChB,EAAGC,GAI7B,OAAOA,IAHaT,EAAa,GAAKmB,GAGRV,EAFbT,EAAamB,KAUVM,CAAiBf,EAAO,CAC5CS,cACAnB,eAUID,EAAY2B,KAAKC,KAAKjB,EAAMH,OAASY,GACrCS,GAAoB5B,EAAa,GAAKmB,EAAe,EACrDU,EAAkB7B,EAAamB,EAAeT,EAAMH,OACtDG,EAAMH,OACLP,EAAamB,EAElB,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAD,EACA,IAJH,SAMG,IACA4B,EACA,IARH,IAUG,IACAC,EACA,IAZH,KAcG,IACAnB,EAAMH,OAfT,OAmBA,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR6B,GAAG,kBACH7B,UAAU,eACV8B,MAAOZ,EACPa,SAzC2B,SAACC,GACpCZ,EAAc,GACdD,GAAsBa,EAAMC,OAAOH,QAkC7B,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBlC,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEF,UAAWA,EACXC,WAAYA,EACZF,QAASuB,IAGX,6BACGC,EAAcN,KAAI,SAAAoB,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YElGlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.9327c0d6.chunk.js","sourcesContent":["import React from 'react';\n\ntype SetPageCallback = (num: number) => number;\n\ninterface Props {\n  pageCount: number,\n  activePage: number,\n  setPage: (value: number | SetPageCallback) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  setPage,\n  pageCount,\n  activePage,\n}) => {\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${activePage === 1 && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={activePage === 1 && 'true'}\n          onClick={() => (\n            setPage(prevPage => (prevPage <= 1 ? prevPage : prevPage - 1))\n          )}\n        >\n          «\n        </a>\n      </li>\n\n      {Array.from({ length: pageCount }, (_, index) => (\n        <li className={`page-item ${activePage === index + 1 && 'active'}`}>\n          <a\n            onClick={() => setPage(index + 1)}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${index + 1}`}\n          >\n            {index + 1}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${activePage === pageCount && 'disabled'}`}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={activePage === pageCount && 'true'}\n          onClick={() => (\n            setPage(prevPage => (\n              prevPage >= pageCount ? prevPage : prevPage + 1\n            ))\n          )}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\ninterface PaginationParams {\n  itemsOnPage: number,\n  activePage: number,\n}\n\nfunction getPreparedItems(\n  initialItems: string[],\n  { itemsOnPage, activePage }: PaginationParams,\n) {\n  return initialItems.filter((_, index) => {\n    const startIndex = (activePage - 1) * itemsOnPage;\n    const endIndex = activePage * itemsOnPage;\n\n    return index >= startIndex && index < endIndex;\n  });\n}\n\nexport const App: React.FC = () => {\n  const { 0: itemsOnPage, 1: setItemsOnPageCount } = useState(5);\n  const { 0: activePage, 1: setActivePage } = useState(1);\n\n  const preparedItems = getPreparedItems(items, {\n    itemsOnPage,\n    activePage,\n  });\n\n  type EventSelect = React.ChangeEvent<HTMLSelectElement>;\n\n  const handleItemsOnPageCountChange = (event: EventSelect) => {\n    setActivePage(1);\n    setItemsOnPageCount(+(event.target.value));\n  };\n\n  const pageCount = Math.ceil(items.length / itemsOnPage);\n  const firstItemOnPage = ((activePage - 1) * itemsOnPage) + 1;\n  const lastItemOnPage = (activePage * itemsOnPage) > items.length\n    ? items.length\n    : (activePage * itemsOnPage);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {activePage}\n        {' '}\n        (items\n        {' '}\n        {firstItemOnPage}\n        {' '}\n        -\n        {' '}\n        {lastItemOnPage}\n        {' '}\n        of\n        {' '}\n        {items.length}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsOnPage}\n            onChange={handleItemsOnPageCountChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        pageCount={pageCount}\n        activePage={activePage}\n        setPage={setActivePage}\n      />\n\n      <ul>\n        {preparedItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}